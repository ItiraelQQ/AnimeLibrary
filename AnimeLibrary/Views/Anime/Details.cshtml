@model AnimeLibrary.Models.AnimeViewModel

@{
    ViewData["Title"] = Model.RomajiTitle;
    var trailerEmbedUrl = !string.IsNullOrEmpty(Model.Trailer) ? $"https://www.youtube.com/embed/{Model.Trailer}" : null;
    var watchEmbedUrl = $"https://www.miruro.tv/watch?id={Model.Id}&ep=1";
}

<div class="anime-details">
    <div class="anime-header">
        <img src="@Model.CoverImage" alt="@Model.EnglishTitle" class="anime-image" />
        <div class="anime-info">
            <h1>@Model.RomajiTitle</h1>
            <h5>@Model.EnglishTitle</h5>
            <h5>@Model.NativeTitle</h5>
            <div id="description" class="description">
                <p>@Html.Raw(Model.Description)</p>
            </div>
            <button id="toggleButton">Подробнее...</button>
        </div>
    </div>
    
    @if (Model.Genres != null && Model.Genres.Any())
    {
        <div class="genres-section">
            <h3>Жанры</h3>
            <ul class="genres-list">
                @foreach (var genre in Model.Genres)
                {
                    <li class="genre-item">@genre</li>
                }
            </ul>
        </div>
    }
    <form asp-action="AddToViewed" method="post">
        <input type="hidden" name="id" value="@Model.Id" />
        <button type="submit" class="btn btn-primary">Добавить в просмотренное</button>
    </form>
    <div class="statistics-section">
        <h3>Статистика</h3>
        <p>Оценка: @(Model.Score.HasValue ? Model.Score.Value.ToString("0.0") : "Rating is unknown.")</p>
        <p>Эпизоды: @(Model.Episodes.HasValue ? Model.Episodes.Value.ToString() : "1000+")</p>
        <p>Дата выхода: @(Model.StartDate.HasValue ? Model.StartDate.Value.ToString("dd.MM.yyyy") : "Release date is unknown.")</p>
    </div>

    @if (Model.RelatedAnime != null && Model.RelatedAnime.Any())
    {
        <div class="related-anime-section">
            <h3>Связанное</h3>
            <div class="related-anime-list">
                @foreach (var related in Model.RelatedAnime)
                {
                    <div class="related-anime-item">
                        @if (@related.Type == "ANIME")
                        {
                            <a class="related-link" href="@Url.Action("Details", "Anime", new { id = related.Id })">
                             <img src="@related.CoverImage" alt="Image @related.Title" />
                             <p class="media-title">@related.Title</p>
                             <p class="media-type">@related.Type</p>
                             </a>
                        } else {
                             <a class="related-link" href="@Url.Action("Details", "Manga", new { id = related.Id })">
                             <img src="@related.CoverImage" alt="Image @related.Title" />
                                <p class="media-title">@related.Title</p>
                                <p class="media-type">@related.Type</p>
                             </a>
                        }
                    </div>
                }
            </div>
        </div>
    }

    @if (!string.IsNullOrEmpty(trailerEmbedUrl))
    {
        <div class="trailer-section">
            <h3>Трейлер</h3>
            <div class="trailer-video">
                <iframe width="560" height="315" src="@trailerEmbedUrl" frameborder="0" allowfullscreen></iframe>
            </div>
        </div>
    }

    @if (Model.Characters != null && Model.Characters.Any())
    {
        <div class="characters-section">
            <h3>Персонажи</h3>
            <div class="characters-list">
                @foreach (var character in Model.Characters)
                {
                    <div class="character-item">
                        <a href="@Url.Action("Details", "Character", new { id = character.CharacterId })">
                            <img src="@character.ImageUrl" alt="@character.Name" class="character-image" />
                            <div class="character-info">
                                <p class="character-name">@character.Name</p>
                                <p class="character-role">Role: @character.Role</p>
                            </div>
                        </a>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <p>No characters available.</p>
    }
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#toggleButton').click(function () {
            var $description = $('#description');
            var isExpanded = $description.hasClass('expanded');

            if (!isExpanded) {
                $description.css('height', $description.prop('scrollHeight') + 'px');
            }

            $description.toggleClass('expanded');

            if (isExpanded) {
                $description.css('height', '100px');
            }

            $(this).text(isExpanded ? 'Read more' : 'Hide');
        });
    });
</script>

<style>
    a {
        text-decoration: none;
    }

    .anime-details {
        max-width: 800px;
        margin: 20px auto;
        padding: 20px;
        background-color: #1c1c1c;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        color: #f0f0f0;
        font-family: 'Arial', sans-serif;
    }

    .anime-header {
        display: flex;
        align-items: flex-start;
        margin-bottom: 20px;
    }

    .anime-image {
        width: 200px;
        height: auto;
        border-radius: 10px;
        margin-right: 20px;
    }

    .anime-info {
        flex-grow: 1;
    }

        .anime-info h1 {
            font-size: 32px;
            margin-bottom: 10px;
            color: #ffa500;
        }

        .anime-info p {
            font-size: 16px;
            line-height: 1.6;
            text-align: justify;
            color: #dcdcdc;
        }

    .description {
        height: 100px;
        overflow: hidden;
        transition: height 1s ease;
    }

        .description.expanded {
            height: auto;
        }

    #toggleButton {
        display: block;
        background-color: #ffa500;
        color: black;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin-top: 10px;
    }

    .genres-section,
    .statistics-section,
    .related-anime-section,
    .characters-section,
    .trailer-section {
        margin-top: 20px;
    }

    .trailer-video {
        display: flex;
        justify-content: center;
    }
    .genres-list {
        list-style-type: none;
        padding: 0;
        text-align: center;
    }

    .genre-item {
        display: inline-block;
        margin: 5px;
        background-color: #ffa500;
        color: black;
        padding: 5px 15px;
        border-radius: 15px;
        font-weight: bold;
    }

    .statistics-section p {
        font-size: 16px;
        color: #f0f0f0;
        margin: 5px 0;
    }

    .related-anime-list {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }

    .related-anime-item {
        width: 180px;
        margin: 10px 0;
        padding: 10px;
        background-color: #2c2c2c;
        border-radius: 10px;
        text-align: center;
    }

        .related-anime-item img {
            width: 100%;
            height: auto;
            border-radius: 5px;
            margin-bottom: 10px;
        }

        .related-anime-item p {
            font-size: 14px;
            margin-top: 5px;
            
        }

    .characters-list {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }

    .character-item {
        width: 150px;
        margin: 10px 0;
        padding: 10px;
        background-color: #2c2c2c;
        border-radius: 10px;
        text-align: center;
    }

    .character-image {
        width: 100%;
        height: auto;
        border-radius: 5px;
        margin-bottom: 10px;
    }

    .character-info {
        color: #dcdcdc;
    }

    .character-name {
        font-size: 14px;
        margin-top: 10px;
        color: #ffa500;
    }

    .character-role {
        font-size: 12px;
        color: #b0b0b0;
    }

    .media-title {
        font-size: 14px;
        font-weight: bold;
        color: #ffa500;
    }

    .media-type {
        font-size: 12px;
        color: #b0b0b0;
    }
</style>

