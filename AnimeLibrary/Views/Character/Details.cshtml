@model AnimeLibrary.Models.CharacterViewModel

@{
    ViewData["Title"] = Model.Name;
}

<div class="character-details">
    <div class="character-header">
        <img src="@Model.ImageUrl" alt="@Model.Name" class="character-image" />
        <div class="character-info">
            <h1>@Model.Name</h1>
            <p>@Html.Raw(Model.Description)</p>
        </div>
    </div>
    <h3>Появления</h3>
    @if (Model.MediaAppearances != null && Model.MediaAppearances.Any())
    {
        <div class="media-appearances">
            @foreach (var appearance in Model.MediaAppearances)
            {
                <div class="media-item">
                    @if (appearance.Type == "ANIME")
                    {
                        <a class="related-link" href="@Url.Action("Details", "Anime", new { id = appearance.Id })">
                            <img src="@appearance.CoverImage" alt="@appearance.Title" class="media-image" />
                            <div class="media-info">
                                <p class="media-title">@appearance.Title</p>
                                <p class="media-type">@appearance.Type</p>
                            </div>
                        </a>
                    } else {
                        <a class="related-link" href="@Url.Action("Details", "Manga", new { id = appearance.Id })">
                            <img src="@appearance.CoverImage" alt="@appearance.Title" class="media-image" />
                            <div class="media-info">
                                <p class="media-title">@appearance.Title</p>
                                <p class="media-type">@appearance.Type</p>
                            </div>
                        </a>
                    }
                </div>
            }
        </div>
    }
    else
    {
        <p>No media appearances available.</p>
    }
</div>

<style>
    a {
        text-decoration: none;
    }
    .character-details {
        max-width: 800px;
        margin: 20px auto;
        padding: 20px;
        background-color: #1c1c1c;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        color: #f0f0f0;
        font-family: 'Arial', sans-serif;
    }

    .character-header {
        display: flex;
        align-items: flex-start;
        margin-bottom: 20px;
    }

    .character-image {
        width: 200px;
        height: auto;
        border-radius: 10px;
        margin-right: 20px;
    }

    .character-info {
        flex-grow: 1;
    }

        .character-info h1 {
            font-size: 32px;
            margin-bottom: 10px;
            color: #ffa500;
        }

        .character-info p {
            font-size: 16px;
            line-height: 1.6;
            text-align: justify;
            color: #dcdcdc;
        }

    .media-appearances {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }

    .media-item {
        width: 180px;
        margin: 10px 0;
        padding: 10px;
        background-color: #2c2c2c;
        border-radius: 10px;
        text-align: center;
    }

    .media-image {
        width: 100%;
        height: auto;
        border-radius: 5px;
        margin-bottom: 10px;
    }

    .media-info {
        color: #dcdcdc;
    }

    .media-title {
        font-size: 14px;
        font-weight: bold;
        color: #ffa500;
    }

    .media-type {
        font-size: 12px;
        color: #b0b0b0;
    }
</style>
